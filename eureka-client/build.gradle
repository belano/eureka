apply plugin: 'nebula-test-jar'
apply plugin: 'provided-base'
// apply plugin: 'maven'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

task writeNewPom << {
    pom {
        project {
            groupId 'com.netflix.eureka'
            artifactId 'eureka-client-jersey2'
            version '1.0.0'

            inceptionYear '2016'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/newpom.xml")
}

dependencies {
    compile 'org.glassfish.jersey.core:jersey-common:2.22.2'
    compile 'org.glassfish.jersey.core:jersey-client:2.22.2'
    compile 'org.glassfish.jersey.core:jersey-server:2.22.2'
    compile 'org.glassfish.jersey.connectors:jersey-apache-connector:2.22.2'

    compile("com.netflix.netflix-commons:netflix-eventbus:0.3.0") {
        exclude module: "servlet-api"
    }
    compile 'com.thoughtworks.xstream:xstream:1.4.2'
    compile "com.netflix.archaius:archaius-core:${archaiusVersion}"
    compile "com.netflix.servo:servo-core:${servoVersion}"
    compile "org.apache.httpcomponents:httpclient:${apacheHttpClientVersion}"
    compile "com.google.inject:guice:${guiceVersion}"
    compile "com.netflix.governator:governator-api:${governatorVersion}"

    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    // Eureka client uses JSON encoding by default
    provided "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    // Prefered jackson Stax serializer. Default Oracle has issues (adds empty namespace) and is slower
    provided "org.codehaus.woodstox:woodstox-core-asl:${woodstoxVersion}"

    runtime "org.codehaus.jettison:jettison:${jettisonVersion}"

    testCompile project(':eureka-test-utils')
    testCompile "junit:junit:${junit_version}"
    testCompile 'org.mortbay.jetty:jetty:6.1H.22'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.mock-server:mockserver-netty:${mockserverVersion}"
}
